{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zenpo\\\\Documents\\\\Programming Projects\\\\Zoom TTRPG Dice App\\\\ttrpg-dice-zoom-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport zoomSdk from \"@zoom/appssdk\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, push, onChildAdded, get, child, remove } from \"firebase/database\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCTy3UKnRfwjVN2f0o-xBDYqIblGSu8g7A\",\n  authDomain: \"zoom-ttrpg-dice-app.firebaseapp.com\",\n  projectId: \"zoom-ttrpg-dice-app\",\n  storageBucket: \"zoom-ttrpg-dice-app.firebasestorage.app\",\n  messagingSenderId: \"762744886186\",\n  appId: \"1:762744886186:web:ac0af79de61e53440911d3\",\n  measurementId: \"G-YEVKWQYXNB\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\nconst getColorForName = name => {\n  const colors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"teal\", \"pink\"];\n  const hash = Array.from(name).reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  return colors[hash % colors.length];\n};\nexport default function TTRPGDice() {\n  _s();\n  const [playerName, setPlayerName] = useState(\"Player\");\n  const [rollHistory, setRollHistory] = useState([]);\n  useEffect(() => {\n    zoomSdk.config({\n      capabilities: [\"getUserContext\"]\n    }).then(() => zoomSdk.getUserContext()).then(ctx => {\n      if (ctx !== null && ctx !== void 0 && ctx.displayName) setPlayerName(ctx.displayName);\n    }).catch(err => console.error(\"Zoom SDK error:\", err));\n    const rollRef = ref(db, \"rolls\");\n    onChildAdded(rollRef, snapshot => {\n      const data = snapshot.val();\n      if (!data || !data.text || !data.color) return;\n      const entry = {\n        text: data.text,\n        color: data.color\n      };\n      setRollHistory(prev => {\n        if (prev.some(e => e.text === entry.text)) return prev;\n        return [entry, ...prev.slice(0, 9)];\n      });\n    });\n  }, []);\n  const rollDie = sides => {\n    const result = Math.floor(Math.random() * sides) + 1;\n    const color = getColorForName(playerName);\n    const entry = {\n      text: `${playerName} rolled d${sides}: ${result}`,\n      color\n    };\n    const rollRef = ref(db, \"rolls\");\n    push(rollRef, entry).then(() => {\n      get(rollRef).then(snapshot => {\n        const allRolls = snapshot.val();\n        if (allRolls) {\n          const keys = Object.keys(allRolls);\n          if (keys.length > 10) {\n            const oldestKey = keys[0];\n            remove(child(rollRef, oldestKey));\n          }\n        }\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto rounded-xl shadow-md text-center bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-2\",\n      children: \"TTRPG Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-500 mb-4\",\n      children: \"Tap a die to roll. Everyone sees the result!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-2 mb-4\",\n      children: [4, 6, 8, 10, 12, 20, 100].map(sides => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => rollDie(sides),\n        className: \"bg-indigo-600 text-white rounded-lg px-4 py-2 text-lg font-medium hover:bg-indigo-700\",\n        children: [\"d\", sides]\n      }, sides, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), rollHistory.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold mb-1\",\n        children: \"Recent Rolls:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm\",\n        children: rollHistory.map((entry, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `text-${entry.color}-600`,\n          children: [\"\\u2022 \", entry.text]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(TTRPGDice, \"IertVBY6lvZxNtLpPr+YBdSfzCo=\");\n_c = TTRPGDice;\nvar _c;\n$RefreshReg$(_c, \"TTRPGDice\");","map":{"version":3,"names":["useState","useEffect","zoomSdk","initializeApp","getDatabase","ref","push","onChildAdded","get","child","remove","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","db","getColorForName","name","colors","hash","Array","from","reduce","acc","char","charCodeAt","length","TTRPGDice","_s","playerName","setPlayerName","rollHistory","setRollHistory","config","capabilities","then","getUserContext","ctx","displayName","catch","err","console","error","rollRef","snapshot","data","val","text","color","entry","prev","some","e","slice","rollDie","sides","result","Math","floor","random","allRolls","keys","Object","oldestKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","idx","_c","$RefreshReg$"],"sources":["C:/Users/zenpo/Documents/Programming Projects/Zoom TTRPG Dice App/ttrpg-dice-zoom-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport zoomSdk from \"@zoom/appssdk\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getDatabase,\n  ref,\n  push,\n  onChildAdded,\n  get,\n  child,\n  remove,\n} from \"firebase/database\";\nimport \"./index.css\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCTy3UKnRfwjVN2f0o-xBDYqIblGSu8g7A\",\n  authDomain: \"zoom-ttrpg-dice-app.firebaseapp.com\",\n  projectId: \"zoom-ttrpg-dice-app\",\n  storageBucket: \"zoom-ttrpg-dice-app.firebasestorage.app\",\n  messagingSenderId: \"762744886186\",\n  appId: \"1:762744886186:web:ac0af79de61e53440911d3\",\n  measurementId: \"G-YEVKWQYXNB\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getDatabase(app);\n\nconst getColorForName = (name) => {\n  const colors = [\"red\", \"blue\", \"green\", \"purple\", \"orange\", \"teal\", \"pink\"];\n  const hash = Array.from(name).reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  return colors[hash % colors.length];\n};\n\nexport default function TTRPGDice() {\n  const [playerName, setPlayerName] = useState(\"Player\");\n  const [rollHistory, setRollHistory] = useState([]);\n\n  useEffect(() => {\n    zoomSdk.config({ capabilities: [\"getUserContext\"] })\n      .then(() => zoomSdk.getUserContext())\n      .then((ctx) => {\n        if (ctx?.displayName) setPlayerName(ctx.displayName);\n      })\n      .catch((err) => console.error(\"Zoom SDK error:\", err));\n\n    const rollRef = ref(db, \"rolls\");\n\n    onChildAdded(rollRef, (snapshot) => {\n      const data = snapshot.val();\n      if (!data || !data.text || !data.color) return;\n\n      const entry = { text: data.text, color: data.color };\n\n      setRollHistory((prev) => {\n        if (prev.some((e) => e.text === entry.text)) return prev;\n        return [entry, ...prev.slice(0, 9)];\n      });\n    });\n  }, []);\n\n  const rollDie = (sides) => {\n    const result = Math.floor(Math.random() * sides) + 1;\n    const color = getColorForName(playerName);\n    const entry = {\n      text: `${playerName} rolled d${sides}: ${result}`,\n      color,\n    };\n\n    const rollRef = ref(db, \"rolls\");\n    push(rollRef, entry).then(() => {\n      get(rollRef).then((snapshot) => {\n        const allRolls = snapshot.val();\n        if (allRolls) {\n          const keys = Object.keys(allRolls);\n          if (keys.length > 10) {\n            const oldestKey = keys[0];\n            remove(child(rollRef, oldestKey));\n          }\n        }\n      });\n    });\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto rounded-xl shadow-md text-center bg-white\">\n      <h1 className=\"text-2xl font-bold mb-2\">TTRPG Dice</h1>\n      <p className=\"text-sm text-gray-500 mb-4\">Tap a die to roll. Everyone sees the result!</p>\n      <div className=\"grid grid-cols-3 gap-2 mb-4\">\n        {[4, 6, 8, 10, 12, 20, 100].map((sides) => (\n          <button\n            key={sides}\n            onClick={() => rollDie(sides)}\n            className=\"bg-indigo-600 text-white rounded-lg px-4 py-2 text-lg font-medium hover:bg-indigo-700\"\n          >\n            d{sides}\n          </button>\n        ))}\n      </div>\n      {rollHistory.length > 0 && (\n        <div className=\"mt-4 text-left\">\n          <h2 className=\"font-semibold mb-1\">Recent Rolls:</h2>\n          <ul className=\"text-sm\">\n            {rollHistory.map((entry, idx) => (\n              <li key={idx} className={`text-${entry.color}-600`}>\n                â€¢ {entry.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}